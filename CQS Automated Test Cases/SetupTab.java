import junit.framework.Test;
import junit.framework.TestSuite;

public class SetupTab {

  public static Test suite() {
    TestSuite suite = new TestSuite();
    suite.addTestSuite(Logging in and getting to setup tab.class);
    suite.addTestSuite(Creating a provider without MPI number.class);
    suite.addTestSuite(logout.class);
    suite.addTestSuite(Logging in and getting to setup tab.class);
    suite.addTestSuite(Creating a provider without last name.class);
    suite.addTestSuite(logout.class);
    suite.addTestSuite(Logging in and getting to setup tab.class);
    suite.addTestSuite(Creating a provider without first name.class);
    suite.addTestSuite(logout.class);
    suite.addTestSuite(Logging in and getting to setup tab.class);
    suite.addTestSuite(Creating a provider without specialty.class);
    suite.addTestSuite(logout.class);
    suite.addTestSuite(Logging in and getting to setup tab.class);
    suite.addTestSuite(Creating a Provider with invalid MPI number.class);
    suite.addTestSuite(logout.class);
    suite.addTestSuite(Logging in and getting to setup tab.class);
    suite.addTestSuite(Creating a Provider.class);
    suite.addTestSuite(logout.class);
    suite.addTestSuite(Logging in and getting to setup tab.class);
    suite.addTestSuite(Creating a provider using existing MPI number.class);
    suite.addTestSuite(logout.class);
    suite.addTestSuite(Logging in and getting to setup tab.class);
    suite.addTestSuite(Creating a provider using existing name.class);
    suite.addTestSuite(logout.class);
    suite.addTestSuite(Logging in and getting to setup tab.class);
    suite.addTestSuite(Creating a provider group with invalid key.class);
    suite.addTestSuite(logout.class);
    suite.addTestSuite(Logging in and getting to setup tab.class);
    suite.addTestSuite(Creating a provider group without key.class);
    suite.addTestSuite(logout.class);
    suite.addTestSuite(Logging in and getting to setup tab.class);
    suite.addTestSuite(Creating a provider group without name.class);
    suite.addTestSuite(logout.class);
    suite.addTestSuite(Logging in and getting to setup tab.class);
    suite.addTestSuite(Creating a provider group without description.class);
    suite.addTestSuite(logout.class);
    suite.addTestSuite(Logging in and getting to setup tab.class);
    suite.addTestSuite(Creating a provider group with required fields.class);
    suite.addTestSuite(logout.class);
    suite.addTestSuite(Logging in and getting to setup tab.class);
    suite.addTestSuite(Creating a provider group using existing key.class);
    suite.addTestSuite(logout.class);
    suite.addTestSuite(Logging in and getting to setup tab.class);
    suite.addTestSuite(creating a provider group using existing name.class);
    suite.addTestSuite(logout.class);
    suite.addTestSuite(Logging in and getting to setup tab.class);
    suite.addTestSuite(Creating an organization without key.class);
    suite.addTestSuite(logout.class);
    suite.addTestSuite(Logging in and getting to setup tab.class);
    suite.addTestSuite(Creating an organization without name.class);
    suite.addTestSuite(logout.class);
    suite.addTestSuite(Logging in and getting to setup tab.class);
    suite.addTestSuite(Creating an organization without description.class);
    suite.addTestSuite(logout.class);
    suite.addTestSuite(Logging in and getting to setup tab.class);
    suite.addTestSuite(Creating an organization with required fields.class);
    suite.addTestSuite(logout.class);
    suite.addTestSuite(Logging in and getting to setup tab.class);
    suite.addTestSuite(Creating an organization using existing key.class);
    suite.addTestSuite(logout.class);
    suite.addTestSuite(Logging in and getting to setup tab.class);
    suite.addTestSuite(Creating an organization using existing name.class);
    suite.addTestSuite(logout.class);
    suite.addTestSuite(Logging in and getting to setup tab.class);
    suite.addTestSuite(Creating a practice with no tax ID.class);
    suite.addTestSuite(logout.class);
    suite.addTestSuite(Logging in and getting to setup tab.class);
    suite.addTestSuite(Creating a practice with no name.class);
    suite.addTestSuite(logout.class);
    suite.addTestSuite(Logging in and getting to setup tab.class);
    suite.addTestSuite(Creating a practice with no description.class);
    suite.addTestSuite(logout.class);
    suite.addTestSuite(Logging in and getting to setup tab.class);
    suite.addTestSuite(Creating a practice with invalid tax ID.class);
    suite.addTestSuite(logout.class);
    suite.addTestSuite(Logging in and getting to setup tab.class);
    suite.addTestSuite(Creating a practice.class);
    suite.addTestSuite(logout.class);
    suite.addTestSuite(Logging in and getting to setup tab.class);
    suite.addTestSuite(Creating a practice with existing tax id.class);
    suite.addTestSuite(logout.class);
    suite.addTestSuite(Logging in and getting to setup tab.class);
    suite.addTestSuite(Creating a practice with existing name.class);
    suite.addTestSuite(logout.class);
    suite.addTestSuite(Logging in and getting to setup tab.class);
    suite.addTestSuite(Creating a test provider.class);
    suite.addTestSuite(logout.class);
    suite.addTestSuite(Logging in and getting to setup tab.class);
    suite.addTestSuite(Adding and Removing a subscriber (content channel).class);
    suite.addTestSuite(logout.class);
    suite.addTestSuite(Logging in and getting to setup tab.class);
    suite.addTestSuite(Creating a dashboard view without name.class);
    suite.addTestSuite(logout.class);
    suite.addTestSuite(Logging in and getting to setup tab.class);
    suite.addTestSuite(Creating a dashboard view without description.class);
    suite.addTestSuite(logout.class);
    suite.addTestSuite(Logging in and getting to setup tab.class);
    suite.addTestSuite(Creating a Dashboard View.class);
    suite.addTestSuite(logout.class);
    suite.addTestSuite(Logging in and getting to setup tab.class);
    suite.addTestSuite(Creating a Dashboard View using an existing name (if it worked).class);
    suite.addTestSuite(logout.class);
    suite.addTestSuite(Logging in and getting to setup tab.class);
    suite.addTestSuite(Creating user.class);
    suite.addTestSuite(logout.class);
    suite.addTestSuite(Logging in and getting to setup tab.class);
    suite.addTestSuite(Editing a user (Name change).class);
    suite.addTestSuite(logout.class);
    suite.addTestSuite(Logging in and getting to setup tab.class);
    suite.addTestSuite(Editing a user (Changing Contact Phone).class);
    suite.addTestSuite(logout.class);
    suite.addTestSuite(Logging in and getting to setup tab.class);
    suite.addTestSuite(Editing a user (Changing Contact E-mail).class);
    suite.addTestSuite(logout.class);
    suite.addTestSuite(UserLogin.class);
    suite.addTestSuite(Without group.class);
    suite.addTestSuite(logout.class);
    suite.addTestSuite(Logging in and getting to setup tab.class);
    suite.addTestSuite(Adding a group (Setup user).class);
    suite.addTestSuite(logout.class);
    suite.addTestSuite(UserLogin.class);
    suite.addTestSuite(With group.class);
    suite.addTestSuite(logout.class);
    suite.addTestSuite(Logging in and getting to setup tab.class);
    suite.addTestSuite(Making User Inactive (setup tab).class);
    suite.addTestSuite(logout.class);
    suite.addTestSuite(UserLogin.class);
    suite.addTestSuite(Inactive User.class);
    suite.addTestSuite(logout.class);
    suite.addTestSuite(Logging in and getting to setup tab.class);
    suite.addTestSuite(Making user Active (setup tab).class);
    suite.addTestSuite(logout.class);
    suite.addTestSuite(Logging in and getting to setup tab.class);
    suite.addTestSuite(Removing a group (setup user).class);
    suite.addTestSuite(logout.class);
    suite.addTestSuite(Logging in and getting to setup tab.class);
    suite.addTestSuite(Adding a provider (setup user).class);
    suite.addTestSuite(logout.class);
    suite.addTestSuite(Logging in and getting to setup tab.class);
    suite.addTestSuite(Removing a provider (setup user).class);
    suite.addTestSuite(logout.class);
    suite.addTestSuite(Logging in and getting to setup tab.class);
    suite.addTestSuite(Creating group.class);
    suite.addTestSuite(logout.class);
    suite.addTestSuite(Logging in and getting to setup tab.class);
    suite.addTestSuite(Changing name of group.class);
    suite.addTestSuite(logout.class);
    suite.addTestSuite(Logging in and getting to setup tab.class);
    suite.addTestSuite(Changing description of group.class);
    suite.addTestSuite(logout.class);
    suite.addTestSuite(Logging in and getting to setup tab.class);
    suite.addTestSuite(Changing status of setup group.class);
    suite.addTestSuite(logout.class);
    suite.addTestSuite(Logging in and getting to setup tab.class);
    suite.addTestSuite(Adding users to Setup Group.class);
    suite.addTestSuite(logout.class);
    suite.addTestSuite(Logging in and getting to setup tab.class);
    suite.addTestSuite(Adding and removing rights (setup group).class);
    suite.addTestSuite(logout.class);
    return suite;
  }

  public static void main(String[] args) {
    junit.textui.TestRunner.run(suite());
  }
}
